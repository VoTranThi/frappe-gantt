{"version":3,"file":"frappe-gantt.min.js","sources":["../../src/date_utils.js","../../src/svg_utils.js","../../src/arrow.js","../../src/bar.js","../../src/popup.js","../../src/defaults.js","../../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nexport default {\r\n    parse_duration(duration) {\r\n        const regex = /([0-9]+)(y|m|d|h|min|s|ms)/gm;\r\n        const matches = regex.exec(duration);\r\n        if (matches !== null) {\r\n            if (matches[2] === 'y') {\r\n                return { duration: parseInt(matches[1]), scale: `year` };\r\n            } else if (matches[2] === 'm') {\r\n                return { duration: parseInt(matches[1]), scale: `month` };\r\n            } else if (matches[2] === 'd') {\r\n                return { duration: parseInt(matches[1]), scale: `day` };\r\n            } else if (matches[2] === 'h') {\r\n                return { duration: parseInt(matches[1]), scale: `hour` };\r\n            } else if (matches[2] === 'min') {\r\n                return { duration: parseInt(matches[1]), scale: `minute` };\r\n            } else if (matches[2] === 's') {\r\n                return { duration: parseInt(matches[1]), scale: `second` };\r\n            } else if (matches[2] === 'ms') {\r\n                return { duration: parseInt(matches[1]), scale: `millisecond` };\r\n            }\r\n        }\r\n    },\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length === 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, date_format = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\r\n            month: 'long',\r\n        });\r\n        const dateTimeFormatShort = new Intl.DateTimeFormat(lang, {\r\n            month: 'short',\r\n        });\r\n        const month_name = dateTimeFormat.format(date);\r\n        const month_name_capitalized =\r\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_name_capitalized,\r\n            MMM: dateTimeFormatShort.format(date),\r\n        };\r\n\r\n        let str = date_format;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replaceAll(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replaceAll(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = 'day') {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds =\r\n            date_a -\r\n            date_b +\r\n            (date_b.getTimezoneOffset() - date_a.getTimezoneOffset()) * 60000;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        // Calculate months across years\r\n        let yearDiff = date_a.getFullYear() - date_b.getFullYear();\r\n        let monthDiff = date_a.getMonth() - date_b.getMonth();\r\n        // calculate extra\r\n        monthDiff += (days % 30) / 30;\r\n\r\n        /* If monthDiff is negative, date_b is in an earlier month than\r\n        date_a and thus subtracted from the year difference in months */\r\n        months = yearDiff * 12 + monthDiff;\r\n        /* If date_a's (e.g. march 1st) day of the month is smaller than date_b (e.g. february 28th),\r\n        adjust the month difference */\r\n        if (date_a.getDate() < date_b.getDate()) {\r\n            months--;\r\n        }\r\n\r\n        // Calculate years based on actual months\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return (\r\n            Math.round(\r\n                {\r\n                    milliseconds,\r\n                    seconds,\r\n                    minutes,\r\n                    hours,\r\n                    days,\r\n                    months,\r\n                    years,\r\n                }[scale] * 100,\r\n            ) / 100\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    convert_scales(period, to_scale) {\r\n        const TO_DAYS = {\r\n            millisecond: 1 / 60 / 60 / 24 / 1000,\r\n            second: 1 / 60 / 60 / 24,\r\n            minute: 1 / 60 / 24,\r\n            hour: 1 / 24,\r\n            day: 1,\r\n            month: 30,\r\n            year: 365,\r\n        };\r\n        const { duration, scale } = this.parse_duration(period);\r\n        let in_days = duration * TO_DAYS[scale];\r\n        return in_days / TO_DAYS[to_scale];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n\r\n    get_days_in_year(date) {\r\n        return date.getFullYear() % 4 ? 365 : 366;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else if (attr === 'clipPath') {\r\n            elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s',\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n        start_x -= 10;\r\n\r\n        let start_y =\r\n            this.gantt.config.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.from_task.task._index +\r\n            this.gantt.options.padding / 2;\r\n\r\n        let end_x = this.to_task.$bar.getX() - 13;\r\n        let end_y =\r\n            this.gantt.config.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.to_task.task._index +\r\n            this.gantt.options.padding / 2;\r\n\r\n        const from_is_below_to =\r\n            this.from_task.task._index > this.to_task.task._index;\r\n\r\n        let curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        let curve_y = from_is_below_to ? -curve : curve;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <=\r\n            this.from_task.$bar.getX() + this.gantt.options.padding\r\n        ) {\r\n            let down_1 = this.gantt.options.padding / 2 - curve;\r\n            if (down_1 < 0) {\r\n                down_1 = 0;\r\n                curve = this.gantt.options.padding / 2;\r\n                curve_y = from_is_below_to ? -curve : curve;\r\n            }\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 ${-curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${-curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        } else {\r\n            if (end_x < start_x + curve) curve = end_x - start_x;\r\n\r\n            let offset = from_is_below_to ? end_y + curve : end_y - curve;\r\n\r\n            this.path = `\r\n              M ${start_x} ${start_y}\r\n              V ${offset}\r\n              a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve}\r\n              L ${end_x} ${end_y}\r\n              m -5 -5\r\n              l 5 5\r\n              l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(gantt, task) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare_wrappers();\r\n        this.prepare_helpers();\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        this.bar_group.innerHTML = '';\r\n        this.handle_group.innerHTML = '';\r\n        if (this.task.custom_class) {\r\n            this.group.classList.add(this.task.custom_class);\r\n        } else {\r\n            this.group.classList = ['bar-wrapper'];\r\n        }\r\n\r\n        this.prepare_values();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(gantt, task) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task = task;\r\n        this.name = this.name || '';\r\n    }\r\n\r\n    prepare_wrappers() {\r\n        this.group = createSVG('g', {\r\n            class:\r\n                'bar-wrapper' +\r\n                (this.task.custom_class ? ' ' + this.task.custom_class : ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.gantt.options.bar_height;\r\n        this.image_size = this.height - 5;\r\n        if(!this.task._start)\r\n            this.task._start = new Date(this.task.start);\r\n        this.task._end = new Date(this.task.end);        \r\n\r\n        if(this.task.baseline){\r\n            if(!this.task._baseline_start)\r\n                this.task._baseline_start = new Date(this.task.baseline_start);\r\n            this.task._baseline_end = new Date(this.task.baseline_end);\r\n        }\r\n\r\n        this.compute_x();\r\n        this.compute_y();\r\n        this.compute_duration();\r\n        this.compute_baseline_duration();\r\n        this.corner_radius = this.gantt.options.bar_corner_radius;\r\n        this.width = this.gantt.config.column_width * this.duration;\r\n        if (!this.task.progress || this.task.progress < 0)\r\n            this.task.progress = 0;\r\n        if (this.task.progress > 100) this.task.progress = 100;\r\n\r\n        if(this.task.baseline){            \r\n            this.baseline_width = this.gantt.config.column_width * this.baseline_duration;\r\n            if (!this.task.baseline_progress)\r\n                this.task.baseline_progress = 0;\r\n            this.task.baseline_progress = Math.max(Math.min(this.task.baseline_progress, 100),0);    \r\n        } \r\n\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    prepare_expected_progress_values() {\r\n        this.compute_expected_progress();\r\n        this.expected_progress_width =\r\n            this.gantt.options.column_width *\r\n                this.duration *\r\n                (this.expected_progress / 100) || 0;\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        if (this.gantt.options.show_expected_progress) {\r\n            this.prepare_expected_progress_values();\r\n            this.draw_expected_progress_bar();\r\n        }\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n\r\n        if (this.task.thumbnail) {\r\n            this.draw_thumbnail();\r\n        }\r\n        if(this.gantt.options.show_baseline)\r\n        {\r\n            this.draw_baselinebar();\r\n        }\r\n        \r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n        if (this.task.color) this.$bar.style.fill = this.task.color;\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n        \r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n    draw_baselinebar() {\r\n        if(this.task.baseline)\r\n        {\r\n            this.$bar_baseline = createSVG('rect', {\r\n                x: this.baseline_x,\r\n                y: this.baseline_y,\r\n                width: this.baseline_width,\r\n                height: 10,\r\n                rx: this.corner_radius,\r\n                ry: this.corner_radius,\r\n                class: 'bar baseline',\r\n                append_to: this.bar_group,\r\n            });\r\n            if (this.task.baseline_color) \r\n            {\r\n                this.$bar_baseline.style.fill = this.task.baseline_color;\r\n            }else\r\n            {\r\n                this.$bar_baseline.style.fill = \"#b686ea\";\r\n            }\r\n            animateSVG(this.$bar_baseline, 'width', 0, this.baseline_width);\r\n        }        \r\n    }\r\n\r\n    draw_expected_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$expected_bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.expected_progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-expected-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(\r\n            this.$expected_bar_progress,\r\n            'width',\r\n            0,\r\n            this.expected_progress_width,\r\n        );\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.progress_width = this.calculate_progress_width();\r\n        let r = this.corner_radius;\r\n        if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent))\r\n            r = this.corner_radius + 2;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: r,\r\n            ry: r,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n        if (this.task.color_progress)\r\n            this.$bar_progress.style.fill = this.task.color;\r\n        const x =\r\n            (date_utils.diff(\r\n                this.task._start,\r\n                this.gantt.gantt_start,\r\n                this.gantt.config.unit,\r\n            ) /\r\n                this.gantt.config.step) *\r\n            this.gantt.config.column_width;\r\n\r\n        let $date_highlight = this.gantt.create_el({\r\n            classes: `date-range-highlight hide highlight-${this.task.id}`,\r\n            width: this.width,\r\n            left: x,\r\n        });\r\n        this.$date_highlight = $date_highlight;\r\n        this.gantt.$lower_header.prepend(this.$date_highlight);\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    calculate_progress_width() {\r\n        const width = this.$bar.getWidth();\r\n        const ignored_end = this.x + width;\r\n        const total_ignored_area =\r\n            this.gantt.config.ignored_positions.reduce((acc, val) => {\r\n                return acc + (val >= this.x && val < ignored_end);\r\n            }, 0) * this.gantt.config.column_width;\r\n        let progress_width =\r\n            ((width - total_ignored_area) * this.task.progress) / 100;\r\n        const progress_end = this.x + progress_width;\r\n        const total_ignored_progress =\r\n            this.gantt.config.ignored_positions.reduce((acc, val) => {\r\n                return acc + (val >= this.x && val < progress_end);\r\n            }, 0) * this.gantt.config.column_width;\r\n\r\n        progress_width += total_ignored_progress;\r\n\r\n        let ignored_regions = this.gantt.get_ignored_region(\r\n            this.x + progress_width,\r\n        );\r\n\r\n        while (ignored_regions.length) {\r\n            progress_width += this.gantt.config.column_width;\r\n            ignored_regions = this.gantt.get_ignored_region(\r\n                this.x + progress_width,\r\n            );\r\n        }\r\n        this.progress_width = progress_width;\r\n        return progress_width;\r\n    }\r\n\r\n    draw_label() {\r\n        let x_coord = this.x + this.$bar.getWidth() / 2;\r\n\r\n        if (this.task.thumbnail) {\r\n            x_coord = this.x + this.image_size + 5;\r\n        }\r\n\r\n        createSVG('text', {\r\n            x: x_coord,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_thumbnail() {\r\n        let x_offset = 10,\r\n            y_offset = 2;\r\n        let defs, clipPath;\r\n\r\n        defs = createSVG('defs', {\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            id: 'rect_' + this.task.id,\r\n            x: this.x + x_offset,\r\n            y: this.y + y_offset,\r\n            width: this.image_size,\r\n            height: this.image_size,\r\n            rx: '15',\r\n            class: 'img_mask',\r\n            append_to: defs,\r\n        });\r\n\r\n        clipPath = createSVG('clipPath', {\r\n            id: 'clip_' + this.task.id,\r\n            append_to: defs,\r\n        });\r\n\r\n        createSVG('use', {\r\n            href: '#rect_' + this.task.id,\r\n            append_to: clipPath,\r\n        });\r\n\r\n        createSVG('image', {\r\n            x: this.x + x_offset,\r\n            y: this.y + y_offset,\r\n            width: this.image_size,\r\n            height: this.image_size,\r\n            class: 'bar-img',\r\n            href: this.task.thumbnail,\r\n            clipPath: 'clip_' + this.task.id,\r\n            append_to: this.bar_group,\r\n        });\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid || this.gantt.options.readonly) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = 3;\r\n        this.handles = [];\r\n        if (!this.gantt.options.readonly_dates) {\r\n            this.handles.push(\r\n                createSVG('rect', {\r\n                    x: bar.getEndX() - handle_width / 2,\r\n                    y: bar.getY() + this.height / 4,\r\n                    width: handle_width,\r\n                    height: this.height / 2,\r\n                    rx: 2,\r\n                    ry: 2,\r\n                    class: 'handle right',\r\n                    append_to: this.handle_group,\r\n                }),\r\n            );\r\n\r\n            this.handles.push(\r\n                createSVG('rect', {\r\n                    x: bar.getX() - handle_width / 2,\r\n                    y: bar.getY() + this.height / 4,\r\n                    width: handle_width,\r\n                    height: this.height / 2,\r\n                    rx: 2,\r\n                    ry: 2,\r\n                    class: 'handle left',\r\n                    append_to: this.handle_group,\r\n                }),\r\n            );\r\n        }\r\n        if (!this.gantt.options.readonly_progress) {\r\n            const bar_progress = this.$bar_progress;\r\n            this.$handle_progress = createSVG('circle', {\r\n                cx: bar_progress.getEndX(),\r\n                cy: bar_progress.getY() + bar_progress.getHeight() / 2,\r\n                r: 4.5,\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n            this.handles.push(this.$handle_progress);\r\n        }\r\n\r\n        for (let handle of this.handles) {\r\n            $.on(handle, 'mouseenter', () => handle.classList.add('active'));\r\n            $.on(handle, 'mouseleave', () => handle.classList.remove('active'));\r\n        }\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        let task_id = this.task.id;\r\n        $.on(this.group, 'mouseover', (e) => {\r\n            this.gantt.trigger_event('hover', [\r\n                this.task,\r\n                e.screenX,\r\n                e.screenY,\r\n                e,\r\n            ]);\r\n        });\r\n\r\n        if (this.gantt.options.popup_on === 'click') {\r\n            $.on(this.group, 'mouseup', (e) => {\r\n                const posX = e.offsetX || e.layerX;\r\n                if (this.$handle_progress) {\r\n                    const cx = +this.$handle_progress.getAttribute('cx');\r\n                    if (cx > posX - 1 && cx < posX + 1) return;\r\n                    if (this.gantt.bar_being_dragged) return;\r\n                }\r\n                this.gantt.show_popup({\r\n                    x: e.offsetX || e.layerX,\r\n                    y: e.offsetY || e.layerY,\r\n                    task: this.task,\r\n                    target: this.$bar,\r\n                });\r\n            });\r\n        }\r\n        let timeout;\r\n        $.on(this.group, 'mouseenter', (e) => {\r\n            timeout = setTimeout(() => {\r\n                if (this.gantt.options.popup_on === 'hover')\r\n                    this.gantt.show_popup({\r\n                        x: e.offsetX || e.layerX,\r\n                        y: e.offsetY || e.layerY,\r\n                        task: this.task,\r\n                        target: this.$bar,\r\n                    });\r\n                this.gantt.$container\r\n                    .querySelector(`.highlight-${task_id}`)\r\n                    .classList.remove('hide');\r\n            }, 200);\r\n        });\r\n        $.on(this.group, 'mouseleave', () => {\r\n            clearTimeout(timeout);\r\n            if (this.gantt.options.popup_on === 'hover')\r\n                this.gantt.popup?.hide?.();\r\n            this.gantt.$container\r\n                .querySelector(`.highlight-${task_id}`)\r\n                .classList.add('hide');\r\n        });\r\n\r\n        $.on(this.group, 'click', () => {\r\n            this.gantt.trigger_event('click', [this.task]);\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n            this.group.classList.remove('active');\r\n            if (this.gantt.popup)\r\n                this.gantt.popup.parent.classList.remove('hide');\r\n\r\n            this.gantt.trigger_event('double_click', [this.task]);\r\n        });\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null }) {\r\n        const bar = this.$bar;\r\n\r\n        if (x) {\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.gantt.get_bar(dep).$bar.getX();\r\n            });\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return prev && x >= curr;\r\n            }, true);\r\n            if (!valid_x) return;\r\n            this.update_attr(bar, 'x', x);\r\n            this.x = x;\r\n            this.$date_highlight.style.left = x + 'px';\r\n        }\r\n        if (width > 0) {\r\n            this.update_attr(bar, 'width', width);\r\n            this.$date_highlight.style.width = width + 'px';\r\n        }\r\n\r\n        this.update_label_position();\r\n        this.update_handle_position();\r\n        this.date_changed();\r\n        this.compute_duration();\r\n        if(this.gantt.options.show_baseline)\r\n            this.compute_baseline_duration()\r\n\r\n        if (this.gantt.options.show_expected_progress) {\r\n            this.update_expected_progressbar_position();\r\n        }\r\n\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    update_label_position_on_horizontal_scroll({ x, sx }) {\r\n        const container =\r\n            this.gantt.$container.querySelector('.gantt-container');\r\n        const label = this.group.querySelector('.bar-label');\r\n        const img = this.group.querySelector('.bar-img') || '';\r\n        const img_mask = this.bar_group.querySelector('.img_mask') || '';\r\n\r\n        let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\r\n        let newLabelX = label.getX() + x;\r\n        let newImgX = (img && img.getX() + x) || 0;\r\n        let imgWidth = (img && img.getBBox().width + 7) || 7;\r\n        let labelEndX = newLabelX + label.getBBox().width + 7;\r\n        let viewportCentral = sx + container.clientWidth / 2;\r\n\r\n        if (label.classList.contains('big')) return;\r\n\r\n        if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\r\n            label.setAttribute('x', newLabelX);\r\n            if (img) {\r\n                img.setAttribute('x', newImgX);\r\n                img_mask.setAttribute('x', newImgX);\r\n            }\r\n        } else if (\r\n            newLabelX - imgWidth > this.$bar.getX() &&\r\n            x < 0 &&\r\n            labelEndX > viewportCentral\r\n        ) {\r\n            label.setAttribute('x', newLabelX);\r\n            if (img) {\r\n                img.setAttribute('x', newImgX);\r\n                img_mask.setAttribute('x', newImgX);\r\n            }\r\n        }\r\n    }\r\n\r\n    date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.gantt.trigger_event('date_change', [\r\n            this.task,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        this.task.progress = this.compute_progress();\r\n        this.gantt.trigger_event('progress_change', [\r\n            this.task,\r\n            this.task.progress,\r\n        ]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.gantt.config.column_width;\r\n        let new_start_date = date_utils.add(\r\n            this.gantt.gantt_start,\r\n            x_in_units * this.gantt.config.step,\r\n            this.gantt.config.unit,\r\n        );\r\n\r\n        const width_in_units = bar.getWidth() / this.gantt.config.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.gantt.config.step,\r\n            this.gantt.config.unit,\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_progress() {\r\n        this.progress_width = this.$bar_progress.getWidth();\r\n        this.x = this.$bar_progress.getBBox().x;\r\n        const progress_area = this.x + this.progress_width;\r\n        const progress =\r\n            this.progress_width -\r\n            this.gantt.config.ignored_positions.reduce((acc, val) => {\r\n                return acc + (val >= this.x && val <= progress_area);\r\n            }, 0) *\r\n                this.gantt.config.column_width;\r\n        if (progress < 0) return 0;\r\n        const total =\r\n            this.$bar.getWidth() -\r\n            this.ignored_duration_raw * this.gantt.config.column_width;\r\n        return parseInt((progress / total) * 100, 10);\r\n    }\r\n\r\n    compute_expected_progress() {\r\n        this.expected_progress =\r\n            date_utils.diff(date_utils.today(), this.task._start, 'hour') /\r\n            this.gantt.config.step;\r\n        this.expected_progress =\r\n            ((this.expected_progress < this.duration\r\n                ? this.expected_progress\r\n                : this.duration) *\r\n                100) /\r\n            this.duration;\r\n    }\r\n\r\n    compute_x() {\r\n        const { column_width } = this.gantt.config;\r\n        const task_start = this.task._start;\r\n        const gantt_start = this.gantt.gantt_start;\r\n\r\n        const diff =\r\n            date_utils.diff(task_start, gantt_start, this.gantt.config.unit) /\r\n            this.gantt.config.step;\r\n\r\n        let x = diff * column_width;\r\n\r\n        /* Since the column width is based on 30,\r\n        we count the month-difference, multiply it by 30 for a \"pseudo-month\"\r\n        and then add the days in the month, making sure the number does not exceed 29\r\n        so it is within the column */\r\n\r\n        // if (this.gantt.view_is('Month')) {\r\n        //     const diffDaysBasedOn30DayMonths =\r\n        //         date_utils.diff(task_start, gantt_start, 'month') * 30;\r\n        //     const dayInMonth = Math.min(\r\n        //         29,\r\n        //         date_utils.format(\r\n        //             task_start,\r\n        //             'DD',\r\n        //             this.gantt.options.language,\r\n        //         ),\r\n        //     );\r\n        //     const diff = diffDaysBasedOn30DayMonths + dayInMonth;\r\n\r\n        //     x = (diff * column_width) / 30;\r\n        // }\r\n\r\n        this.x = x;\r\n\r\n        if(this.task.baseline){\r\n            const m_baseline_start = this.task._baseline_start;\r\n\r\n            const diff =\r\n                date_utils.diff(m_baseline_start, gantt_start, this.gantt.config.unit) /\r\n                this.gantt.config.step;\r\n            this.baseline_x = diff * column_width;\r\n        }\r\n    }\r\n\r\n    compute_y() {\r\n        this.y =\r\n            this.gantt.config.header_height +\r\n            this.gantt.options.padding / 2 +\r\n            this.task._index * (this.height + this.gantt.options.padding);\r\n\r\n        if(this.task.baseline  && this.gantt.options.show_baseline){\r\n            this.baseline_y =\r\n            this.gantt.config.header_height +\r\n            this.gantt.options.padding / 2 +\r\n            this.task._index * (this.height + this.gantt.options.padding);\r\n\r\n            this.baseline_y = this.baseline_y + this.height - 4;\r\n        }\r\n    }\r\n\r\n    compute_duration() {\r\n        let actual_duration_in_days = 0,\r\n            duration_in_days = 0;\r\n        for (\r\n            let d = new Date(this.task._start);\r\n            d < this.task._end;\r\n            d.setDate(d.getDate() + 1)\r\n        ) {\r\n            duration_in_days++;\r\n            if (\r\n                !this.gantt.config.ignored_dates.find(\r\n                    (k) => k.getTime() === d.getTime(),\r\n                ) &&\r\n                (!this.gantt.config.ignored_function ||\r\n                    !this.gantt.config.ignored_function(d))\r\n            ) {\r\n                actual_duration_in_days++;\r\n            }\r\n        }\r\n        this.task.actual_duration = actual_duration_in_days;\r\n        this.task.ignored_duration = duration_in_days - actual_duration_in_days;\r\n\r\n        this.duration =\r\n            date_utils.convert_scales(\r\n                duration_in_days + 'd',\r\n                this.gantt.config.unit,\r\n            ) / this.gantt.config.step;\r\n        \r\n       \r\n        this.actual_duration_raw =\r\n            date_utils.convert_scales(\r\n                actual_duration_in_days + 'd',\r\n                this.gantt.config.unit,\r\n            ) / this.gantt.config.step;\r\n\r\n        this.ignored_duration_raw = this.duration - this.actual_duration_raw;\r\n    }\r\n\r\n    compute_baseline_duration() {\r\n        if(!this.task.baseline || !this.gantt.options.show_baseline){\r\n            return;\r\n        }\r\n        let actual_duration_in_days = 0,\r\n            duration_in_days = 0;\r\n        for (\r\n            let d = new Date(this.task._baseline_start);\r\n            d < this.task._baseline_end;\r\n            d.setDate(d.getDate() + 1)\r\n        ) {\r\n            duration_in_days++;\r\n            if (\r\n                !this.gantt.config.ignored_dates.find(\r\n                    (k) => k.getTime() === d.getTime(),\r\n                ) &&\r\n                (!this.gantt.config.ignored_function ||\r\n                    !this.gantt.config.ignored_function(d))\r\n            ) {\r\n                actual_duration_in_days++;\r\n            }\r\n        }\r\n        this.task.actual_baseline_duration = actual_duration_in_days;\r\n        this.task.ignored_baseline_duration = duration_in_days - actual_duration_in_days;\r\n\r\n        this.baseline_duration =\r\n            date_utils.convert_scales(\r\n                duration_in_days + 'd',\r\n                this.gantt.config.unit,\r\n            ) / this.gantt.config.step;\r\n        \r\n       \r\n        this.actual_baseline_duration_raw =\r\n            date_utils.convert_scales(\r\n                actual_duration_in_days + 'd',\r\n                this.gantt.config.unit,\r\n            ) / this.gantt.config.step;\r\n\r\n        this.ignored_baseline_duration_raw = this.baseline_duration - this.actual_baseline_duration_raw;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_expected_progressbar_position() {\r\n        if (this.invalid) return;\r\n        this.$expected_bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.compute_expected_progress();\r\n        this.$expected_bar_progress.setAttribute(\r\n            'width',\r\n            this.gantt.config.column_width *\r\n                this.actual_duration_raw *\r\n                (this.expected_progress / 100) || 0,\r\n        );\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        if (this.invalid || this.gantt.options.readonly) return;\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.calculate_progress_width(),\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const img_mask = this.bar_group.querySelector('.img_mask') || '';\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label'),\r\n            img = this.group.querySelector('.bar-img');\r\n\r\n        let padding = 5;\r\n        let x_offset_label_img = this.image_size + 10;\r\n        const labelWidth = label.getBBox().width;\r\n        const barWidth = bar.getWidth();\r\n        if (labelWidth > barWidth) {\r\n            label.classList.add('big');\r\n            if (img) {\r\n                img.setAttribute('x', bar.getEndX() + padding);\r\n                img_mask.setAttribute('x', bar.getEndX() + padding);\r\n                label.setAttribute('x', bar.getEndX() + x_offset_label_img);\r\n            } else {\r\n                label.setAttribute('x', bar.getEndX() + padding);\r\n            }\r\n        } else {\r\n            label.classList.remove('big');\r\n            if (img) {\r\n                img.setAttribute('x', bar.getX() + padding);\r\n                img_mask.setAttribute('x', bar.getX() + padding);\r\n                label.setAttribute(\r\n                    'x',\r\n                    bar.getX() + barWidth / 2 + x_offset_label_img,\r\n                );\r\n            } else {\r\n                label.setAttribute(\r\n                    'x',\r\n                    bar.getX() + barWidth / 2 - labelWidth / 2,\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    update_handle_position() {\r\n        if (this.invalid || this.gantt.options.readonly) return;\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX());\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX());\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle && handle.setAttribute('cx', this.$bar_progress.getEndX());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, popup_func, gantt) {\r\n        this.parent = parent;\r\n        this.popup_func = popup_func;\r\n        this.gantt = gantt;\r\n\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"details\"></div>\r\n            <div class=\"actions\"></div>\r\n        `;\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.details = this.parent.querySelector('.details');\r\n        this.actions = this.parent.querySelector('.actions');\r\n    }\r\n\r\n    show({ x, y, task, target }) {\r\n        this.actions.innerHTML = '';\r\n        let html = this.popup_func({\r\n            task,\r\n            chart: this.gantt,\r\n            get_title: () => this.title,\r\n            set_title: (title) => (this.title.innerHTML = title),\r\n            get_subtitle: () => this.subtitle,\r\n            set_subtitle: (subtitle) => (this.subtitle.innerHTML = subtitle),\r\n            get_details: () => this.details,\r\n            set_details: (details) => (this.details.innerHTML = details),\r\n            add_action: (html, func) => {\r\n                let action = this.gantt.create_el({\r\n                    classes: 'action-btn',\r\n                    type: 'button',\r\n                    append_to: this.actions,\r\n                });\r\n                if (typeof html === 'function') html = html(task);\r\n                action.innerHTML = html;\r\n                action.onclick = (e) => func(task, this.gantt, e);\r\n            },\r\n        });\r\n        if (html === false) return;\r\n        if (html) this.parent.innerHTML = html;\r\n\r\n        if (this.actions.innerHTML === '') this.actions.remove();\r\n        else this.parent.appendChild(this.actions);\r\n\r\n        this.parent.style.left = x + 10 + 'px';\r\n        this.parent.style.top = y - 10 + 'px';\r\n        this.parent.classList.remove('hide');\r\n    }\r\n\r\n    hide() {\r\n        this.parent.classList.add('hide');\r\n    }\r\n}\r\n","import date_utils from './date_utils';\r\n\r\nfunction getDecade(d) {\r\n    const year = d.getFullYear();\r\n    return year - (year % 10) + '';\r\n}\r\n\r\nfunction formatWeek(d, ld, lang) {\r\n    let endOfWeek = date_utils.add(d, 6, 'day');\r\n    let endFormat = endOfWeek.getMonth() !== d.getMonth() ? 'D MMM' : 'D';\r\n    let beginFormat = !ld || d.getMonth() !== ld.getMonth() ? 'D MMM' : 'D';\r\n    return `${date_utils.format(d, beginFormat, lang)} - ${date_utils.format(endOfWeek, endFormat, lang)}`;\r\n}\r\n\r\nconst DEFAULT_VIEW_MODES = [\r\n    /*{\r\n        name: 'Hour',\r\n        padding: '7d',\r\n        step: '1h',\r\n        date_format: 'YYYY-MM-DD HH:',\r\n        lower_text: 'HH',\r\n        upper_text: (d, ld, lang) =>\r\n            !ld || d.getDate() !== ld.getDate()\r\n                ? date_utils.format(d, 'D MMMM', lang)\r\n                : '',\r\n        upper_text_frequency: 24,\r\n    },\r\n    {\r\n        name: 'Quarter Day',\r\n        padding: '7d',\r\n        step: '6h',\r\n        date_format: 'YYYY-MM-DD HH:',\r\n        lower_text: 'HH',\r\n        upper_text: (d, ld, lang) =>\r\n            !ld || d.getDate() !== ld.getDate()\r\n                ? date_utils.format(d, 'D MMM', lang)\r\n                : '',\r\n        upper_text_frequency: 4,\r\n    },\r\n    {\r\n        name: 'Half Day',\r\n        padding: '14d',\r\n        step: '12h',\r\n        date_format: 'YYYY-MM-DD HH:',\r\n        lower_text: 'HH',\r\n        upper_text: (d, ld, lang) =>\r\n            !ld || d.getDate() !== ld.getDate()\r\n                ? d.getMonth() !== d.getMonth()\r\n                    ? date_utils.format(d, 'D MMM', lang)\r\n                    : date_utils.format(d, 'D', lang)\r\n                : '',\r\n        upper_text_frequency: 2,\r\n    },*/\r\n    {\r\n        name: 'Day',\r\n        padding: '7d',\r\n        date_format: 'YYYY-MM-DD',\r\n        step: '1d',\r\n        lower_text: (d, ld, lang) =>\r\n            !ld || d.getDate() !== ld.getDate()\r\n                ? date_utils.format(d, 'D', lang)\r\n                : '',\r\n        upper_text: (d, ld, lang) =>\r\n            !ld || d.getMonth() !== ld.getMonth()\r\n                ? date_utils.format(d, 'MMMM', lang)\r\n                : '',\r\n        thick_line: (d) => d.getDay() === 1,\r\n    },\r\n    {\r\n        name: 'Week',\r\n        padding: '1m',\r\n        step: '7d',\r\n        date_format: 'YYYY-MM-DD',\r\n        column_width: 140,\r\n        lower_text: formatWeek,\r\n        upper_text: (d, ld, lang) =>\r\n            !ld || d.getMonth() !== ld.getMonth()\r\n                ? date_utils.format(d, 'MMMM', lang)\r\n                : '',\r\n        thick_line: (d) => d.getDate() >= 1 && d.getDate() <= 7,\r\n        upper_text_frequency: 4,\r\n    },\r\n    {\r\n        name: 'Month',\r\n        padding: '2m',\r\n        step: '1m',\r\n        column_width: 120,\r\n        date_format: 'YYYY-MM',\r\n        lower_text: 'MMMM',\r\n        upper_text: (d, ld, lang) =>\r\n            !ld || d.getFullYear() !== ld.getFullYear()\r\n                ? date_utils.format(d, 'YYYY', lang)\r\n                : '',\r\n        thick_line: (d) => d.getMonth() % 3 === 0,\r\n        snap_at: '7d',\r\n    },\r\n    {\r\n        name: 'Year',\r\n        padding: '2y',\r\n        step: '1y',\r\n        column_width: 120,\r\n        date_format: 'YYYY',\r\n        upper_text: (d, ld, lang) =>\r\n            !ld || getDecade(d) !== getDecade(ld) ? getDecade(d) : '',\r\n        lower_text: 'YYYY',\r\n        snap_at: '30d',\r\n    },\r\n];\r\n\r\nconst DEFAULT_OPTIONS = {\r\n    arrow_curve: 5,\r\n    auto_move_label: false,\r\n    bar_corner_radius: 3,\r\n    bar_height: 30,\r\n    container_height: 'auto',\r\n    column_width: null,\r\n    date_format: 'YYYY-MM-DD HH:mm',\r\n    upper_header_height: 45,\r\n    lower_header_height: 30,\r\n    snap_at: null,\r\n    infinite_padding: true,\r\n    holidays: { 'var(--g-weekend-highlight-color)': 'weekend' },\r\n    ignore: [],\r\n    language: 'en',\r\n    lines: 'both',\r\n    move_dependencies: true,\r\n    padding: 18,\r\n    popup: (ctx) => {\r\n        ctx.set_title(ctx.task.name);\r\n        if (ctx.task.description) ctx.set_subtitle(ctx.task.description);\r\n        else ctx.set_subtitle('');\r\n\r\n        const start_date = date_utils.format(\r\n            ctx.task._start,\r\n            'MMM D',\r\n            ctx.chart.options.language,\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(ctx.task._end, -1, 'second'),\r\n            'MMM D',\r\n            ctx.chart.options.language,\r\n        );\r\n\r\n        ctx.set_details(\r\n            `${start_date} - ${end_date} (${ctx.task.actual_duration} days${ctx.task.ignored_duration ? ' + ' + ctx.task.ignored_duration + ' excluded' : ''})<br/>Progress: ${Math.floor(ctx.task.progress * 100) / 100}%`,\r\n        );\r\n    },\r\n    popup_on: 'click',\r\n    readonly_progress: false,\r\n    readonly_dates: false,\r\n    readonly: false,\r\n    scroll_to: 'today',\r\n    show_expected_progress: false,\r\n    today_button: true,\r\n    view_mode: 'Day',\r\n    view_mode_select: false,\r\n    view_modes: DEFAULT_VIEW_MODES,\r\n};\r\n\r\nexport { DEFAULT_OPTIONS, DEFAULT_VIEW_MODES };\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG } from './svg_utils';\r\n\r\nimport Arrow from './arrow';\r\nimport Bar from './bar';\r\nimport Popup from './popup';\r\n\r\nimport { DEFAULT_OPTIONS, DEFAULT_VIEW_MODES } from './defaults';\r\n\r\nimport './styles/gantt.css';\r\n\r\nexport default class Gantt {\r\n    constructor(wrapper, tasks, options) {\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_options(options);\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n        this.bind_events();    \r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            let el = document.querySelector(element);\r\n            if (!el) {\r\n                throw new ReferenceError(\r\n                    `CSS selector \"${element}\" could not be found in DOM`,\r\n                );\r\n            }\r\n            element = el;\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Frappe Gantt only supports usage of a string CSS selector,' +\r\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\",\r\n            );\r\n        }\r\n\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'gantt',\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('gantt');\r\n        }\r\n\r\n        // wrapper element\r\n        this.$container = this.create_el({\r\n            classes: 'gantt-container',\r\n            append_to: this.$svg.parentElement,\r\n        });\r\n\r\n        this.$container.appendChild(this.$svg);\r\n        this.$popup_wrapper = this.create_el({\r\n            classes: 'popup-wrapper',\r\n            append_to: this.$container,\r\n        });\r\n    }\r\n\r\n    setup_options(options) {\r\n        this.original_options = options;\r\n        this.options = { ...DEFAULT_OPTIONS, ...options };\r\n        const CSS_VARIABLES = {\r\n            'grid-height': 'container_height',\r\n            'bar-height': 'bar_height',\r\n            'lower-header-height': 'lower_header_height',\r\n            'upper-header-height': 'upper_header_height',\r\n        };\r\n        for (let name in CSS_VARIABLES) {\r\n            let setting = this.options[CSS_VARIABLES[name]];\r\n            if (setting !== 'auto')\r\n                this.$container.style.setProperty(\r\n                    '--gv-' + name,\r\n                    setting + 'px',\r\n                );\r\n        }\r\n\r\n        if(this.options.height)\r\n        {\r\n            this.$container.style.setProperty('height',this.options.height );\r\n        }\r\n\r\n        this.config = {\r\n            ignored_dates: [],\r\n            ignored_positions: [],\r\n            extend_by_units: 10,\r\n        };\r\n\r\n        if (typeof this.options.ignore !== 'function') {\r\n            if (typeof this.options.ignore === 'string')\r\n                this.options.ignore = [this.options.ignord];\r\n            for (let option of this.options.ignore) {\r\n                if (typeof option === 'function') {\r\n                    this.config.ignored_function = option;\r\n                    continue;\r\n                }\r\n                if (typeof option === 'string') {\r\n                    if (option === 'weekend')\r\n                        this.config.ignored_function = (d) =>\r\n                            d.getDay() == 6 || d.getDay() == 0;\r\n                    else this.config.ignored_dates.push(new Date(option + ' '));\r\n                }\r\n            }\r\n        } else {\r\n            this.config.ignored_function = this.options.ignore;\r\n        }\r\n    }\r\n\r\n    update_options(options) {\r\n        this.setup_options({ ...this.original_options, ...options });\r\n        this.change_view_mode(undefined, true);\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        this.tasks = tasks\r\n            .map((task, i) => {\r\n                if (!task.start) {\r\n                    console.error(\r\n                        `task \"${task.id}\" doesn't have a start date`,\r\n                    );\r\n                    return false;\r\n                }\r\n\r\n                task._start = date_utils.parse(task.start);\r\n                if (task.end === undefined && task.duration !== undefined) {\r\n                    task.end = task._start;\r\n                    let durations = task.duration.split(' ');\r\n\r\n                    durations.forEach((tmpDuration) => {\r\n                        let { duration, scale } =\r\n                            date_utils.parse_duration(tmpDuration);\r\n                        task.end = date_utils.add(task.end, duration, scale);\r\n                    });\r\n                }\r\n                if (!task.end) {\r\n                    console.error(`task \"${task.id}\" doesn't have an end date`);\r\n                    return false;\r\n                }\r\n                task._end = date_utils.parse(task.end);\r\n\r\n                let diff = date_utils.diff(task._end, task._start, 'year');\r\n                if (diff < 0) {\r\n                    console.error(\r\n                        `start of task can't be after end of task: in task \"${task.id}\"`,\r\n                    );\r\n                    return false;\r\n                }\r\n\r\n                // make task invalid if duration too large\r\n                if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                    console.error(\r\n                        `the duration of task \"${task.id}\" is too long (above ten years)`,\r\n                    );\r\n                    return false;\r\n                }\r\n\r\n                // cache index\r\n                task._index = i;\r\n\r\n                // if hours is not set, assume the last day is full day\r\n                // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n                const task_end_values = date_utils.get_date_values(task._end);\r\n                if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                    task._end = date_utils.add(task._end, 24, 'hour');\r\n                }\r\n\r\n                // dependencies\r\n                if (\r\n                    typeof task.dependencies === 'string' ||\r\n                    !task.dependencies\r\n                ) {\r\n                    let deps = [];\r\n                    if (task.dependencies) {\r\n                        deps = task.dependencies\r\n                            .split(',')\r\n                            .map((d) => d.trim().replaceAll(' ', '_'))\r\n                            .filter((d) => d);\r\n                    }\r\n                    task.dependencies = deps;\r\n                }\r\n\r\n                // uids\r\n                if (!task.id) {\r\n                    task.id = generate_id(task);\r\n                } else if (typeof task.id === 'string') {\r\n                    task.id = task.id.replaceAll(' ', '_');\r\n                } else {\r\n                    task.id = `${task.id}`;\r\n                }\r\n\r\n                // baseline\r\n                if(task.baseline && this.options.show_baseline)\r\n                {\r\n                    if (!task.baseline_start) {\r\n                        console.error(\r\n                            `task \"${task.id}\" doesn't have a baseline start date`,\r\n                        );\r\n                        return false;\r\n                    }\r\n    \r\n                    task._baseline_start = date_utils.parse(task.baseline_start);\r\n                    if (task.baseline_end === undefined && task.baseline_duration !== undefined) {\r\n                        task.baseline_end = task._baseline_start;\r\n                        let durations = task.baseline_duration.split(' ');\r\n    \r\n                        durations.forEach((tmpDuration) => {\r\n                            let { duration, scale } =\r\n                                date_utils.parse_duration(tmpDuration);\r\n                            task.baseline_end = date_utils.add(task.baseline_end, duration, scale);\r\n                        });\r\n                    }\r\n                    if (!task.baseline_end) {\r\n                        console.error(`task \"${task.id}\" doesn't have an baseline end date`);\r\n                        return false;\r\n                    }\r\n                    task._baseline_end = date_utils.parse(task.baseline_end);\r\n    \r\n                    let diff = date_utils.diff(task._baseline_end, task._baseline_start, 'year');\r\n                    if (diff < 0) {\r\n                        console.error(\r\n                            `Baseline start of task can't be after end of task: in task \"${task.id}\"`,\r\n                        );\r\n                        return false;\r\n                    }\r\n    \r\n                    // make task invalid if duration too large\r\n                    if (date_utils.diff(task._baseline_end, task._baseline_start, 'year') > 10) {\r\n                        console.error(\r\n                            `the duration baseline of  task \"${task.id}\" is too long (above ten years)`,\r\n                        );\r\n                        return false;\r\n                    }\r\n                    // if hours is not set, assume the last day is full day\r\n                    // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n                    const task_end_values = date_utils.get_date_values(task._baseline_end);\r\n                    if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                        task._baseline_end = date_utils.add(task._baseline_end, 24, 'hour');\r\n                    }\r\n                }\r\n                return task;\r\n            })\r\n            .filter((t) => t);\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks) {\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n    }\r\n\r\n    update_task(id, new_details) {\r\n        let task = this.tasks.find((t) => t.id === id);\r\n        let bar = this.bars[task._index];\r\n        Object.assign(task, new_details);\r\n        bar.refresh();\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode, maintain_pos = false) {\r\n        if (typeof mode === 'string') {\r\n            mode = this.options.view_modes.find((d) => d.name === mode);\r\n        }\r\n        let old_pos, old_scroll_op;\r\n        if (maintain_pos) {\r\n            old_pos = this.$container.scrollLeft;\r\n            old_scroll_op = this.options.scroll_to;\r\n            this.options.scroll_to = null;\r\n        }\r\n        this.options.view_mode = mode.name;\r\n        this.config.view_mode = mode;\r\n        this.update_view_scale(mode);\r\n        this.setup_dates(maintain_pos);\r\n        this.render();\r\n        if (maintain_pos) {\r\n            this.$container.scrollLeft = old_pos;\r\n            this.options.scroll_to = old_scroll_op;\r\n        }\r\n        this.trigger_event('view_change', [mode]);\r\n\r\n        if(this.options.height)\r\n        {\r\n            this.$container.style.setProperty('height',this.options.height );\r\n        }\r\n    }\r\n\r\n    update_view_scale(mode) {\r\n        let { duration, scale } = date_utils.parse_duration(mode.step);\r\n        this.config.step = duration;\r\n        this.config.unit = scale;\r\n        this.config.column_width =\r\n            this.options.column_width || mode.column_width || 45;\r\n        this.$container.style.setProperty(\r\n            '--gv-column-width',\r\n            this.config.column_width + 'px',\r\n        );\r\n        this.config.header_height =\r\n            this.options.lower_header_height +\r\n            this.options.upper_header_height +\r\n            10;\r\n    }\r\n\r\n    setup_dates(refresh = false) {\r\n        this.setup_gantt_dates(refresh);\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_gantt_dates(refresh) {\r\n        let gantt_start, gantt_end;\r\n        if (!this.tasks.length) {\r\n            gantt_start = new Date();\r\n            gantt_end = new Date();\r\n        }\r\n\r\n        for (let task of this.tasks) {\r\n            if (!gantt_start || task._start < gantt_start) {\r\n                gantt_start = task._start;\r\n            }\r\n            if (!gantt_end || task._end > gantt_end) {\r\n                gantt_end = task._end;\r\n            }\r\n        }\r\n\r\n        gantt_start = date_utils.start_of(gantt_start, this.config.unit);\r\n        gantt_end = date_utils.start_of(gantt_end, this.config.unit);\r\n\r\n        if (!refresh) {\r\n            if (!this.options.infinite_padding) {\r\n                if (typeof this.config.view_mode.padding === 'string')\r\n                    this.config.view_mode.padding = [\r\n                        this.config.view_mode.padding,\r\n                        this.config.view_mode.padding,\r\n                    ];\r\n\r\n                let [padding_start, padding_end] =\r\n                    this.config.view_mode.padding.map(\r\n                        date_utils.parse_duration,\r\n                    );\r\n                this.gantt_start = date_utils.add(\r\n                    gantt_start,\r\n                    -padding_start.duration,\r\n                    padding_start.scale,\r\n                );\r\n                this.gantt_end = date_utils.add(\r\n                    gantt_end,\r\n                    padding_end.duration,\r\n                    padding_end.scale,\r\n                );\r\n            } else {\r\n                this.gantt_start = date_utils.add(\r\n                    gantt_start,\r\n                    -this.config.extend_by_units * 3,\r\n                    this.config.unit,\r\n                );\r\n                this.gantt_end = date_utils.add(\r\n                    gantt_end,\r\n                    this.config.extend_by_units * 3,\r\n                    this.config.unit,\r\n                );\r\n            }\r\n        }\r\n        this.config.date_format =\r\n            this.config.view_mode.date_format || this.options.date_format;\r\n        this.gantt_start.setHours(0, 0, 0, 0);\r\n    }\r\n\r\n    setup_date_values() {\r\n        let cur_date = this.gantt_start;\r\n        this.dates = [cur_date];\r\n\r\n        while (cur_date < this.gantt_end) {\r\n            cur_date = date_utils.add(\r\n                cur_date,\r\n                this.config.step,\r\n                this.config.unit,\r\n            );\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_click();\r\n        this.bind_holiday_labels();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_grid_extras();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_dimensions();\r\n        this.set_scroll_position(this.options.scroll_to);\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        const layers = ['grid', 'arrow', 'progress', 'bar'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n        this.$extras = this.create_el({\r\n            classes: 'extras',\r\n            append_to: this.$container,\r\n        });\r\n        this.$adjust = this.create_el({\r\n            classes: 'adjust hide',\r\n            append_to: this.$extras,\r\n            type: 'button',\r\n        });\r\n        this.$adjust.innerHTML = '&larr;';\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_side_header();\r\n    }\r\n\r\n    make_grid_extras() {\r\n        this.make_grid_highlights();\r\n        this.make_grid_ticks();\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.config.column_width;\r\n        const grid_height = Math.max(\r\n            this.config.header_height +\r\n                this.options.padding +\r\n                (this.options.bar_height + this.options.padding) *\r\n                    this.tasks.length -\r\n                10,\r\n            this.options.container_height !== 'auto'\r\n                ? this.options.container_height\r\n                : 0,\r\n        );\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.$svg,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height,\r\n            width: '100%',\r\n        });\r\n        this.grid_height = grid_height;\r\n        if (this.options.container_height === 'auto')\r\n            this.$container.style.height = grid_height + 'px';\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.config.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let y = this.config.header_height;\r\n        for (\r\n            let y = this.config.header_height;\r\n            y < this.grid_height;\r\n            y += row_height\r\n        ) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        this.$header = this.create_el({\r\n            width: this.dates.length * this.config.column_width,\r\n            classes: 'grid-header',\r\n            append_to: this.$container,\r\n        });\r\n\r\n        this.$upper_header = this.create_el({\r\n            classes: 'upper-header',\r\n            append_to: this.$header,\r\n        });\r\n        this.$lower_header = this.create_el({\r\n            classes: 'lower-header',\r\n            append_to: this.$header,\r\n        });\r\n    }\r\n\r\n    make_side_header() {\r\n        this.$side_header = this.create_el({ classes: 'side-header' });\r\n        this.$upper_header.prepend(this.$side_header);\r\n\r\n        // Create view mode change select\r\n        if (this.options.view_mode_select) {\r\n            const $select = document.createElement('select');\r\n            $select.classList.add('viewmode-select');\r\n\r\n            const $el = document.createElement('option');\r\n            $el.selected = true;\r\n            $el.disabled = true;\r\n            $el.textContent = 'Mode';\r\n            $select.appendChild($el);\r\n\r\n            for (const mode of this.options.view_modes) {\r\n                const $option = document.createElement('option');\r\n                $option.value = mode.name;\r\n                $option.textContent = mode.name;\r\n                if (mode.name === this.config.view_mode.name)\r\n                    $option.selected = true;\r\n                $select.appendChild($option);\r\n            }\r\n\r\n            $select.addEventListener(\r\n                'change',\r\n                function () {\r\n                    this.change_view_mode($select.value, true);\r\n                }.bind(this),\r\n            );\r\n            this.$side_header.appendChild($select);\r\n        }\r\n\r\n        // Create today button\r\n        if (this.options.today_button) {\r\n            let $today_button = document.createElement('button');\r\n            $today_button.classList.add('today-button');\r\n            $today_button.textContent = 'Today';\r\n            $today_button.onclick = this.scroll_current.bind(this);\r\n            this.$side_header.prepend($today_button);\r\n            this.$today_button = $today_button;\r\n        }\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        if (this.options.lines === 'none') return;\r\n        let tick_x = 0;\r\n        let tick_y = this.config.header_height;\r\n        let tick_height = this.grid_height - this.config.header_height;\r\n\r\n        let $lines_layer = createSVG('g', {\r\n            class: 'lines_layer',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        let row_y = this.config.header_height;\r\n\r\n        const row_width = this.dates.length * this.config.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n        if (this.options.lines !== 'vertical') {\r\n            for (\r\n                let y = this.config.header_height;\r\n                y < this.grid_height;\r\n                y += row_height\r\n            ) {\r\n                createSVG('line', {\r\n                    x1: 0,\r\n                    y1: row_y + row_height,\r\n                    x2: row_width,\r\n                    y2: row_y + row_height,\r\n                    class: 'row-line',\r\n                    append_to: $lines_layer,\r\n                });\r\n                row_y += row_height;\r\n            }\r\n        }\r\n        if (this.options.lines === 'horizontal') return;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            if (\r\n                this.config.view_mode.thick_line &&\r\n                this.config.view_mode.thick_line(date)\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is('month')) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_month(date) *\r\n                        this.config.column_width) /\r\n                    30;\r\n            } else if (this.view_is('year')) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_year(date) *\r\n                        this.config.column_width) /\r\n                    365;\r\n            } else {\r\n                tick_x += this.config.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    highlight_holidays() {\r\n        let labels = {};\r\n        if (!this.options.holidays) return;\r\n\r\n        for (let color in this.options.holidays) {\r\n            let check_highlight = this.options.holidays[color];\r\n            if (check_highlight === 'weekend')\r\n                check_highlight = (d) => d.getDay() === 0 || d.getDay() === 6;\r\n            let extra_func;\r\n\r\n            if (typeof check_highlight === 'object') {\r\n                let f = check_highlight.find((k) => typeof k === 'function');\r\n                if (f) {\r\n                    extra_func = f;\r\n                }\r\n                if (this.options.holidays.name) {\r\n                    let dateObj = new Date(check_highlight.date + ' ');\r\n                    check_highlight = (d) => dateObj.getTime() === d.getTime();\r\n                    labels[dateObj] = check_highlight.name;\r\n                } else {\r\n                    check_highlight = (d) =>\r\n                        this.options.holidays[color]\r\n                            .filter((k) => typeof k !== 'function')\r\n                            .map((k) => {\r\n                                if (k.name) {\r\n                                    let dateObj = new Date(k.date + ' ');\r\n                                    labels[dateObj] = k.name;\r\n                                    return dateObj.getTime();\r\n                                }\r\n                                return new Date(k + ' ').getTime();\r\n                            })\r\n                            .includes(d.getTime());\r\n                }\r\n            }\r\n            for (\r\n                let d = new Date(this.gantt_start);\r\n                d <= this.gantt_end;\r\n                d.setDate(d.getDate() + 1)\r\n            ) {\r\n                if (\r\n                    this.config.ignored_dates.find(\r\n                        (k) => k.getTime() == d.getTime(),\r\n                    ) ||\r\n                    (this.config.ignored_function &&\r\n                        this.config.ignored_function(d))\r\n                )\r\n                    continue;\r\n                if (check_highlight(d) || (extra_func && extra_func(d))) {\r\n                    const x =\r\n                        (date_utils.diff(\r\n                            d,\r\n                            this.gantt_start,\r\n                            this.config.unit,\r\n                        ) /\r\n                            this.config.step) *\r\n                        this.config.column_width;\r\n                    const height = this.grid_height - this.config.header_height;\r\n                    const d_formatted = date_utils\r\n                        .format(d, 'YYYY-MM-DD', this.options.language)\r\n                        .replace(' ', '_');\r\n\r\n                    if (labels[d]) {\r\n                        let label = this.create_el({\r\n                            classes: 'holiday-label ' + 'label_' + d_formatted,\r\n                            append_to: this.$extras,\r\n                        });\r\n                        label.textContent = labels[d];\r\n                    }\r\n                    createSVG('rect', {\r\n                        x: Math.round(x),\r\n                        y: this.config.header_height,\r\n                        width:\r\n                            this.config.column_width /\r\n                            date_utils.convert_scales(\r\n                                this.config.view_mode.step,\r\n                                'day',\r\n                            ),\r\n                        height,\r\n                        class: 'holiday-highlight ' + d_formatted,\r\n                        style: `fill: ${color};`,\r\n                        append_to: this.layers.grid,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compute the horizontal x-axis distance and associated date for the current date and view.\r\n     *\r\n     * @returns Object containing the x-axis distance and date of the current date, or null if the current date is out of the gantt range.\r\n     */\r\n    highlight_current() {\r\n        const res = this.get_closest_date();\r\n        if (!res) return;\r\n\r\n        const [_, el] = res;\r\n        el.classList.add('current-date-highlight');\r\n\r\n        const diff_in_units = date_utils.diff(\r\n            new Date(),\r\n            this.gantt_start,\r\n            this.config.unit,\r\n        );\r\n\r\n        const left =\r\n            (diff_in_units / this.config.step) * this.config.column_width;\r\n\r\n        this.$current_highlight = this.create_el({\r\n            top: this.config.header_height,\r\n            left,\r\n            height: this.grid_height - this.config.header_height,\r\n            classes: 'current-highlight',\r\n            append_to: this.$container,\r\n        });\r\n        this.$current_ball_highlight = this.create_el({\r\n            top: this.config.header_height - 6,\r\n            left: left - 2.5,\r\n            width: 6,\r\n            height: 6,\r\n            classes: 'current-ball-highlight',\r\n            append_to: this.$header,\r\n        });\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        this.highlight_holidays();\r\n        this.config.ignored_positions = [];\r\n\r\n        const height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n        this.layers.grid.innerHTML += `<pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"4\" height=\"4\">\r\n          <path d=\"M-1,1 l2,-2\r\n                   M0,4 l4,-4\r\n                   M3,5 l2,-2\"\r\n                style=\"stroke:grey; stroke-width:0.3\" />\r\n        </pattern>`;\r\n\r\n        for (\r\n            let d = new Date(this.gantt_start);\r\n            d <= this.gantt_end;\r\n            d.setDate(d.getDate() + 1)\r\n        ) {\r\n            if (\r\n                !this.config.ignored_dates.find(\r\n                    (k) => k.getTime() == d.getTime(),\r\n                ) &&\r\n                (!this.config.ignored_function ||\r\n                    !this.config.ignored_function(d))\r\n            )\r\n                continue;\r\n            let diff =\r\n                date_utils.convert_scales(\r\n                    date_utils.diff(d, this.gantt_start) + 'd',\r\n                    this.config.unit,\r\n                ) / this.config.step;\r\n\r\n            this.config.ignored_positions.push(diff * this.config.column_width);\r\n            createSVG('rect', {\r\n                x: diff * this.config.column_width,\r\n                y: this.config.header_height,\r\n                width: this.config.column_width,\r\n                height: height,\r\n                class: 'ignored-bar',\r\n                style: 'fill: url(#diagonalHatch);',\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n\r\n        const highlightDimensions = this.highlight_current(\r\n            this.config.view_mode,\r\n        );\r\n\r\n        if (!highlightDimensions) return;\r\n    }\r\n\r\n    create_el({ left, top, width, height, id, classes, append_to, type }) {\r\n        let $el = document.createElement(type || 'div');\r\n        for (let cls of classes.split(' ')) $el.classList.add(cls);\r\n        $el.style.top = top + 'px';\r\n        $el.style.left = left + 'px';\r\n        if (id) $el.id = id;\r\n        if (width) $el.style.width = width + 'px';\r\n        if (height) $el.style.height = height + 'px';\r\n        if (append_to) append_to.appendChild($el);\r\n        return $el;\r\n    }\r\n\r\n    make_dates() {\r\n        this.get_dates_to_draw().forEach((date, i) => {\r\n            if (date.lower_text) {\r\n                let $lower_text = this.create_el({\r\n                    left: date.x,\r\n                    top: date.lower_y,\r\n                    classes: 'lower-text date_' + sanitize(date.formatted_date),\r\n                    append_to: this.$lower_header,\r\n                });\r\n                $lower_text.innerText = date.lower_text;\r\n            }\r\n\r\n            if (date.upper_text) {\r\n                let $upper_text = this.create_el({\r\n                    left: date.x,\r\n                    top: date.upper_y,\r\n                    classes: 'upper-text',\r\n                    append_to: this.$upper_header,\r\n                });\r\n                $upper_text.innerText = date.upper_text;\r\n            }\r\n        });\r\n        this.upperTexts = Array.from(\r\n            this.$container.querySelectorAll('.upper-text'),\r\n        );\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date_info = null;\r\n        const dates = this.dates.map((date, i) => {\r\n            const d = this.get_date_info(date, last_date_info, i);\r\n            last_date_info = d;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date_info) {\r\n        let last_date = last_date_info ? last_date_info.date : null;\r\n\r\n        let column_width = this.config.column_width;\r\n\r\n        const x = last_date_info\r\n            ? last_date_info.x + last_date_info.column_width\r\n            : 0;\r\n\r\n        let upper_text = this.config.view_mode.upper_text;\r\n        let lower_text = this.config.view_mode.lower_text;\r\n\r\n        if (!upper_text) {\r\n            this.config.view_mode.upper_text = () => '';\r\n        } else if (typeof upper_text === 'string') {\r\n            this.config.view_mode.upper_text = (date) =>\r\n                date_utils.format(date, upper_text, this.options.language);\r\n        }\r\n\r\n        if (!lower_text) {\r\n            this.config.view_mode.lower_text = () => '';\r\n        } else if (typeof lower_text === 'string') {\r\n            this.config.view_mode.lower_text = (date) =>\r\n                date_utils.format(date, lower_text, this.options.language);\r\n        }\r\n\r\n        return {\r\n            date,\r\n            formatted_date: sanitize(\r\n                date_utils.format(\r\n                    date,\r\n                    this.config.date_format,\r\n                    this.options.language,\r\n                ),\r\n            ),\r\n            column_width: this.config.column_width,\r\n            x,\r\n            upper_text: this.config.view_mode.upper_text(\r\n                date,\r\n                last_date,\r\n                this.options.language,\r\n            ),\r\n            lower_text: this.config.view_mode.lower_text(\r\n                date,\r\n                last_date,\r\n                this.options.language,\r\n            ),\r\n            upper_y: 17,\r\n            lower_y: this.options.upper_header_height + 5,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.bars[dependency._index], // from_task\r\n                        this.bars[task._index], // to_task\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_dimensions() {\r\n        const { width: cur_width } = this.$svg.getBoundingClientRect();\r\n        const actual_width = this.$svg.querySelector('.grid .grid-row')\r\n            ? this.$svg.querySelector('.grid .grid-row').getAttribute('width')\r\n            : 0;\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position(date) {\r\n        if (this.options.infinite_padding && (!date || date === 'start')) {\r\n            let [min_start, ..._] = this.get_start_end_positions();\r\n            this.$container.scrollLeft = min_start;\r\n            return;\r\n        }\r\n        if (!date || date === 'start') {\r\n            date = this.gantt_start;\r\n        } else if (date === 'end') {\r\n            date = this.gantt_end;\r\n        } else if (date === 'today') {\r\n            return this.scroll_current();\r\n        } else if (typeof date === 'string') {\r\n            date = date_utils.parse(date);\r\n        }\r\n\r\n        // Weird bug where infinite padding results in one day offset in scroll\r\n        // Related to header-body displacement\r\n        const units_since_first_task = date_utils.diff(\r\n            date,\r\n            this.gantt_start,\r\n            this.config.unit,\r\n        );\r\n        const scroll_pos =\r\n            (units_since_first_task / this.config.step) *\r\n            this.config.column_width;\r\n\r\n        this.$container.scrollTo({\r\n            left: scroll_pos - this.config.column_width / 6,\r\n            behavior: 'smooth',\r\n        });\r\n\r\n        // Calculate current scroll position's upper text\r\n        if (this.$current) {\r\n            this.$current.classList.remove('current-upper');\r\n        }\r\n\r\n        this.current_date = date_utils.add(\r\n            this.gantt_start,\r\n            this.$container.scrollLeft / this.config.column_width,\r\n            this.config.unit,\r\n        );\r\n\r\n        let current_upper = this.config.view_mode.upper_text(\r\n            this.current_date,\r\n            null,\r\n            this.options.language,\r\n        );\r\n        let $el = this.upperTexts.find(\r\n            (el) => el.textContent === current_upper,\r\n        );\r\n\r\n        // Recalculate\r\n        this.current_date = date_utils.add(\r\n            this.gantt_start,\r\n            (this.$container.scrollLeft + $el.clientWidth) /\r\n                this.config.column_width,\r\n            this.config.unit,\r\n        );\r\n        current_upper = this.config.view_mode.upper_text(\r\n            this.current_date,\r\n            null,\r\n            this.options.language,\r\n        );\r\n        $el = this.upperTexts.find((el) => el.textContent === current_upper);\r\n        $el.classList.add('current-upper');\r\n        this.$current = $el;\r\n    }\r\n\r\n    scroll_current() {\r\n        let res = this.get_closest_date();\r\n        if (res) this.set_scroll_position(res[0]);\r\n    }\r\n\r\n    get_closest_date() {\r\n        let now = new Date();\r\n        if (now < this.gantt_start || now > this.gantt_end) return null;\r\n\r\n        let current = new Date(),\r\n            el = this.$container.querySelector(\r\n                '.date_' +\r\n                    sanitize(\r\n                        date_utils.format(\r\n                            current,\r\n                            this.config.date_format,\r\n                            this.options.language,\r\n                        ),\r\n                    ),\r\n            );\r\n\r\n        // safety check to prevent infinite loop\r\n        let c = 0;\r\n        while (!el && c < this.config.step) {\r\n            current = date_utils.add(current, -1, this.config.unit);\r\n            el = this.$container.querySelector(\r\n                '.date_' +\r\n                    sanitize(\r\n                        date_utils.format(\r\n                            current,\r\n                            this.config.date_format,\r\n                            this.options.language,\r\n                        ),\r\n                    ),\r\n            );\r\n            c++;\r\n        }\r\n        return [\r\n            new Date(\r\n                date_utils.format(\r\n                    current,\r\n                    this.config.date_format,\r\n                    this.options.language,\r\n                ) + ' ',\r\n            ),\r\n            el,\r\n        ];\r\n    }\r\n\r\n    bind_grid_click() {\r\n        $.on(\r\n            this.$container,\r\n            'click',\r\n            '.grid-row, .grid-header, .ignored-bar, .holiday-highlight',\r\n            () => {\r\n                this.unselect_all();\r\n                this.hide_popup();\r\n            },\r\n        );\r\n    }\r\n\r\n    bind_holiday_labels() {\r\n        const $highlights =\r\n            this.$container.querySelectorAll('.holiday-highlight');\r\n        for (let h of $highlights) {\r\n            const label = this.$container.querySelector(\r\n                '.label_' + h.classList[1],\r\n            );\r\n            if (!label) continue;\r\n            let timeout;\r\n            h.onmouseenter = (e) => {\r\n                timeout = setTimeout(() => {\r\n                    label.classList.add('show');\r\n                    label.style.left = (e.offsetX || e.layerX) + 'px';\r\n                    label.style.top = (e.offsetY || e.layerY) + 'px';\r\n                }, 300);\r\n            };\r\n\r\n            h.onmouseleave = (e) => {\r\n                clearTimeout(timeout);\r\n                label.classList.remove('show');\r\n            };\r\n        }\r\n    }\r\n\r\n    get_start_end_positions() {\r\n        if (!this.bars.length) return [0, 0, 0];\r\n        let { x, width } = this.bars[0].group.getBBox();\r\n        let min_start = x;\r\n        let max_start = x;\r\n        let max_end = x + width;\r\n        Array.prototype.forEach.call(this.bars, function ({ group }, i) {\r\n            let { x, width } = group.getBBox();\r\n            if (x < min_start) min_start = x;\r\n            if (x > max_start) max_start = x;\r\n            if (x + width > max_end) max_end = x + width;\r\n        });\r\n        return [min_start, max_start, max_end];\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let x_on_scroll_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bar\r\n        this.bar_being_dragged = null;\r\n\r\n        const action_in_progress = () =>\r\n            is_dragging || is_resizing_left || is_resizing_right;\r\n\r\n        this.$svg.onclick = (e) => {\r\n            if (e.target.classList.contains('grid-row')) this.unselect_all();\r\n        };\r\n\r\n        let pos = 0;\r\n        $.on(this.$svg, 'mousemove', '.bar-wrapper, .handle', (e) => {\r\n            if (\r\n                this.bar_being_dragged === false &&\r\n                Math.abs((e.offsetX || e.layerX) - pos) > 10\r\n            )\r\n                this.bar_being_dragged = true;\r\n        });\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n            if (element.classList.contains('left')) {\r\n                is_resizing_left = true;\r\n                element.classList.add('visible');\r\n            } else if (element.classList.contains('right')) {\r\n                is_resizing_right = true;\r\n                element.classList.add('visible');\r\n            } else if (element.classList.contains('bar-wrapper')) {\r\n                is_dragging = true;\r\n            }\r\n\r\n            if (this.popup) this.popup.hide();\r\n\r\n            x_on_start = e.offsetX || e.layerX;\r\n            y_on_start = e.offsetY || e.layerY;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n            let ids;\r\n            if (this.options.move_dependencies) {\r\n                ids = [\r\n                    parent_bar_id,\r\n                    ...this.get_all_dependent_tasks(parent_bar_id),\r\n                ];\r\n            } else {\r\n                ids = [parent_bar_id];\r\n            }\r\n            bars = ids.map((id) => this.get_bar(id));\r\n\r\n            this.bar_being_dragged = false;\r\n            pos = x_on_start;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n            });\r\n        });\r\n\r\n        if (this.options.infinite_padding) {\r\n            let extended = false;\r\n            $.on(this.$container, 'mousewheel', (e) => {\r\n                let trigger = this.$container.scrollWidth / 2;\r\n                if (!extended && e.currentTarget.scrollLeft <= trigger) {\r\n                    let old_scroll_left = e.currentTarget.scrollLeft;\r\n                    extended = true;\r\n\r\n                    this.gantt_start = date_utils.add(\r\n                        this.gantt_start,\r\n                        -this.config.extend_by_units,\r\n                        this.config.unit,\r\n                    );\r\n                    this.setup_date_values();\r\n                    this.render();\r\n                    e.currentTarget.scrollLeft =\r\n                        old_scroll_left +\r\n                        this.config.column_width * this.config.extend_by_units;\r\n                    setTimeout(() => (extended = false), 300);\r\n                }\r\n\r\n                if (\r\n                    !extended &&\r\n                    e.currentTarget.scrollWidth -\r\n                        (e.currentTarget.scrollLeft +\r\n                            e.currentTarget.clientWidth) <=\r\n                        trigger\r\n                ) {\r\n                    let old_scroll_left = e.currentTarget.scrollLeft;\r\n                    extended = true;\r\n                    this.gantt_end = date_utils.add(\r\n                        this.gantt_end,\r\n                        this.config.extend_by_units,\r\n                        this.config.unit,\r\n                    );\r\n                    this.setup_date_values();\r\n                    this.render();\r\n                    e.currentTarget.scrollLeft = old_scroll_left;\r\n                    setTimeout(() => (extended = false), 300);\r\n                }\r\n            });\r\n        }\r\n\r\n        $.on(this.$container, 'scroll', (e) => {\r\n            let localBars = [];\r\n            const ids = this.bars.map(({ group }) =>\r\n                group.getAttribute('data-id'),\r\n            );\r\n            let dx;\r\n            if (x_on_scroll_start) {\r\n                dx = e.currentTarget.scrollLeft - x_on_scroll_start;\r\n            }\r\n\r\n            // Calculate current scroll position's upper text\r\n            this.current_date = date_utils.add(\r\n                this.gantt_start,\r\n                (e.currentTarget.scrollLeft / this.config.column_width) *\r\n                    this.config.step,\r\n                this.config.unit,\r\n            );\r\n\r\n            let current_upper = this.config.view_mode.upper_text(\r\n                this.current_date,\r\n                null,\r\n                this.options.language,\r\n            );\r\n            let $el = this.upperTexts.find(\r\n                (el) => el.textContent === current_upper,\r\n            );\r\n\r\n            // Recalculate for smoother experience\r\n            this.current_date = date_utils.add(\r\n                this.gantt_start,\r\n                ((e.currentTarget.scrollLeft + $el.clientWidth) /\r\n                    this.config.column_width) *\r\n                    this.config.step,\r\n                this.config.unit,\r\n            );\r\n            current_upper = this.config.view_mode.upper_text(\r\n                this.current_date,\r\n                null,\r\n                this.options.language,\r\n            );\r\n            $el = this.upperTexts.find(\r\n                (el) => el.textContent === current_upper,\r\n            );\r\n\r\n            if ($el !== this.$current) {\r\n                if (this.$current)\r\n                    this.$current.classList.remove('current-upper');\r\n\r\n                $el.classList.add('current-upper');\r\n                this.$current = $el;\r\n            }\r\n\r\n            x_on_scroll_start = e.currentTarget.scrollLeft;\r\n            let [min_start, max_start, max_end] =\r\n                this.get_start_end_positions();\r\n\r\n            if (x_on_scroll_start > max_end + 100) {\r\n                this.$adjust.innerHTML = '&larr;';\r\n                this.$adjust.classList.remove('hide');\r\n                this.$adjust.onclick = () => {\r\n                    this.$container.scrollTo({\r\n                        left: max_start,\r\n                        behavior: 'smooth',\r\n                    });\r\n                };\r\n            } else if (\r\n                x_on_scroll_start + e.currentTarget.offsetWidth <\r\n                min_start - 100\r\n            ) {\r\n                this.$adjust.innerHTML = '&rarr;';\r\n                this.$adjust.classList.remove('hide');\r\n                this.$adjust.onclick = () => {\r\n                    this.$container.scrollTo({\r\n                        left: min_start,\r\n                        behavior: 'smooth',\r\n                    });\r\n                };\r\n            } else {\r\n                this.$adjust.classList.add('hide');\r\n            }\r\n\r\n            if (dx) {\r\n                localBars = ids.map((id) => this.get_bar(id));\r\n                if (this.options.auto_move_label) {\r\n                    localBars.forEach((bar) => {\r\n                        bar.update_label_position_on_horizontal_scroll({\r\n                            x: dx,\r\n                            sx: e.currentTarget.scrollLeft,\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            const dx = (e.offsetX || e.layerX) - x_on_start;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_position(dx, $bar.ox);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                            width: $bar.owidth - $bar.finaldx,\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_resizing_right) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            width: $bar.owidth + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (\r\n                    is_dragging &&\r\n                    !this.options.readonly &&\r\n                    !this.options.readonly_dates\r\n                ) {\r\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n                }\r\n            });\r\n        });\r\n\r\n        document.addEventListener('mouseup', () => {\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n            this.$container\r\n                .querySelector('.visible')\r\n                ?.classList?.remove?.('visible');\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            this.bar_being_dragged = null;\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                if (!$bar.finaldx) return;\r\n                bar.date_changed();\r\n                bar.compute_progress();\r\n                bar.set_action_completed();\r\n            });\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX || e.layerX;\r\n            y_on_start = e.offsetY || e.layerY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.owidth;\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        const range_positions = this.config.ignored_positions.map((d) => [\r\n            d,\r\n            d + this.config.column_width,\r\n        ]);\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            let now_x = e.offsetX || e.layerX;\r\n\r\n            let moving_right = now_x > x_on_start;\r\n            if (moving_right) {\r\n                let k = range_positions.find(\r\n                    ([begin, end]) => now_x >= begin && now_x < end,\r\n                );\r\n                while (k) {\r\n                    now_x = k[1];\r\n                    k = range_positions.find(\r\n                        ([begin, end]) => now_x >= begin && now_x < end,\r\n                    );\r\n                }\r\n            } else {\r\n                let k = range_positions.find(\r\n                    ([begin, end]) => now_x > begin && now_x <= end,\r\n                );\r\n                while (k) {\r\n                    now_x = k[0];\r\n                    k = range_positions.find(\r\n                        ([begin, end]) => now_x > begin && now_x <= end,\r\n                    );\r\n                }\r\n            }\r\n\r\n            let dx = now_x - x_on_start;\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            $bar_progress.setAttribute('width', $bar_progress.owidth + dx);\r\n            $.attr(bar.$handle_progress, 'cx', $bar_progress.getEndX());\r\n\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n            bar = null;\r\n            $bar_progress = null;\r\n            $bar = null;\r\n        });\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_position(dx, ox) {\r\n        let unit_length = 1;\r\n        const default_snap =\r\n            this.options.snap_at || this.config.view_mode.snap_at || '1d';\r\n\r\n        if (default_snap !== 'unit') {\r\n            const { duration, scale } = date_utils.parse_duration(default_snap);\r\n            unit_length =\r\n                date_utils.convert_scales(this.config.view_mode.step, scale) /\r\n                duration;\r\n        }\r\n\r\n        const rem = dx % (this.config.column_width / unit_length);\r\n\r\n        let final_dx =\r\n            dx -\r\n            rem +\r\n            (rem < (this.config.column_width / unit_length) * 2\r\n                ? 0\r\n                : this.config.column_width / unit_length);\r\n        let final_pos = ox + final_dx;\r\n\r\n        const drn = final_dx > 0 ? 1 : -1;\r\n        let ignored_regions = this.get_ignored_region(final_pos, drn);\r\n        while (ignored_regions.length) {\r\n            final_pos += this.config.column_width * drn;\r\n            ignored_regions = this.get_ignored_region(final_pos, drn);\r\n            if (!ignored_regions.length)\r\n                final_pos -= this.config.column_width * drn;\r\n        }\r\n        return final_pos - ox;\r\n    }\r\n\r\n    get_ignored_region(pos, drn = 1) {\r\n        if (drn === 1) {\r\n            return this.config.ignored_positions.filter((val) => {\r\n                return pos > val && pos <= val + this.config.column_width;\r\n            });\r\n        } else {\r\n            return this.config.ignored_positions.filter(\r\n                (val) => pos >= val && pos < val + this.config.column_width,\r\n            );\r\n        }\r\n    }\r\n\r\n    unselect_all() {\r\n        if (this.popup) this.popup.parent.classList.add('hide');\r\n        this.$container\r\n            .querySelectorAll('.date-range-highlight')\r\n            .forEach((k) => k.classList.add('hide'));\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.config.view_mode.name === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some(view_is);\r\n        }\r\n\r\n        return this.config.view_mode.name === modes.name;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(opts) {\r\n        if (this.options.popup === false) return;\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.$popup_wrapper,\r\n                this.options.popup,\r\n                this,\r\n            );\r\n        }\r\n        this.popup.show(opts);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(this, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Gantt\r\n     */\r\n    get_oldest_starting_date() {\r\n        if (!this.tasks.length) return new Date();\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date,\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Gantt\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n        this.$header?.remove?.();\r\n        this.$side_header?.remove?.();\r\n        this.$current_highlight?.remove?.();\r\n        this.$extras?.remove?.();\r\n        this.popup?.hide?.();\r\n    }\r\n}\r\n\r\nGantt.VIEW_MODE = {\r\n    //HOUR: DEFAULT_VIEW_MODES[0],\r\n    //QUARTER_DAY: DEFAULT_VIEW_MODES[1],\r\n    //HALF_DAY: DEFAULT_VIEW_MODES[2],\r\n    DAY: DEFAULT_VIEW_MODES[3],\r\n    WEEK: DEFAULT_VIEW_MODES[4],\r\n    MONTH: DEFAULT_VIEW_MODES[5],\r\n    YEAR: DEFAULT_VIEW_MODES[6],\r\n};\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n\r\nfunction sanitize(s) {\r\n    return s.replaceAll(' ', '_').replaceAll(':', '_').replaceAll('.', '_');\r\n}\r\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","date_format","lang","dateTimeFormat","Intl","DateTimeFormat","month","dateTimeFormatShort","month_name","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","getTimezoneOffset","yearDiff","getFullYear","monthDiff","getMonth","getDate","endsWith","Math","round","today","now","add","qty","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","k","M","T","L","Y","S","should_reset","_scale","clone","convert_scales","period","to_scale","TO_DAYS","millisecond","second","minute","hour","day","year","get_days_in_month","get_days_in_year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Arrow","constructor","gantt","from_task","to_task","calculate_path","draw","start_x","$bar","getX","getWidth","condition","options","padding","start_y","config","header_height","bar_height","task","_index","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","down_1","down_2","getY","getHeight","left","path","offset","id","update","Bar","set_defaults","prepare_wrappers","prepare_helpers","refresh","bar_group","handle_group","custom_class","group","classList","prepare_values","action_completed","class","invalid","height","image_size","_start","start","_end","end","baseline","_baseline_start","baseline_start","_baseline_end","baseline_end","compute_x","compute_y","compute_duration","compute_baseline_duration","corner_radius","bar_corner_radius","width","column_width","progress","baseline_width","baseline_duration","baseline_progress","max","min","SVGElement","prototype","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","show_baseline","draw_baselinebar","x","y","rx","ry","color","style","fill","$bar_baseline","baseline_x","baseline_y","baseline_color","$expected_bar_progress","progress_width","calculate_progress_width","r","test","navigator","userAgent","$bar_progress","color_progress","gantt_start","unit","step","$date_highlight","create_el","classes","$lower_header","prepend","ignored_end","ignored_positions","reduce","acc","progress_end","ignored_regions","get_ignored_region","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handles","readonly_dates","handle_width","readonly_progress","bar_progress","$handle_progress","cx","cy","handle","remove","setup_click_event","task_id","timeout","trigger_event","screenX","screenY","popup_on","posX","offsetX","layerX","bar_being_dragged","show_popup","offsetY","layerY","setTimeout","$container","_a","_b","clearTimeout","popup","hide","parent","update_bar_position","dependencies","dep","get_bar","prev","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","compute_progress","set_action_completed","x_in_units","width_in_units","progress_area","total","ignored_duration_raw","task_start","m_baseline_start","actual_duration_in_days","duration_in_days","setDate","ignored_dates","find","getTime","ignored_function","actual_duration","ignored_duration","actual_duration_raw","actual_baseline_duration","ignored_baseline_duration","actual_baseline_duration_raw","ignored_baseline_duration_raw","isNaN","x_offset_label_img","labelWidth","barWidth","arrows","arrow","Popup","popup_func","make","title","subtitle","details","actions","show","html","chart","get_title","set_title","get_subtitle","set_subtitle","get_details","set_details","add_action","func","action","type","onclick","top","getDecade","DEFAULT_VIEW_MODES","lower_text","ld","upper_text","thick_line","getDay","endOfWeek","endFormat","beginFormat","upper_text_frequency","snap_at","DEFAULT_OPTIONS","auto_move_label","container_height","upper_header_height","lower_header_height","infinite_padding","holidays","ignore","language","lines","move_dependencies","ctx","description","start_date","end_date","floor","scroll_to","today_button","view_mode","view_mode_select","view_modes","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","el","ReferenceError","HTMLElement","$svg","parentElement","$popup_wrapper","original_options","CSS_VARIABLES","setting","setProperty","extend_by_units","ignord","option","update_options","console","error","tmpDuration","every","deps","trim","filter","random","toString","t","setup_dependencies","dependency_map","update_task","new_details","bars","assign","mode","maintain_pos","old_pos","old_scroll_op","scrollLeft","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","padding_start","padding_end","setHours","cur_date","dates","bind_grid_click","bind_holiday_labels","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_grid_extras","make_bars","make_arrows","map_arrows_on_bars","set_dimensions","set_scroll_position","layers","layer","$extras","$adjust","make_grid_background","make_grid_rows","make_grid_header","make_side_header","make_grid_highlights","make_grid_ticks","grid_width","grid_height","rows_layer","grid","row_width","row_height","$header","$upper_header","$side_header","$select","createElement","$el","selected","disabled","textContent","$option","$today_button","scroll_current","tick_x","tick_y","tick_height","$lines_layer","row_y","x1","y1","x2","y2","tick_class","view_is","highlight_holidays","labels","extra_func","check_highlight","f","dateObj","d_formatted","replace","highlight_current","res","get_closest_date","_","$current_highlight","$current_ball_highlight","cls","get_dates_to_draw","lower_y","sanitize","formatted_date","innerText","upper_y","upperTexts","Array","querySelectorAll","last_date_info","get_date_info","last_date","dependency","get_task","Boolean","cur_width","getBoundingClientRect","actual_width","min_start","get_start_end_positions","scroll_pos","scrollTo","behavior","$current","current_date","current_upper","current","c","unselect_all","hide_popup","$highlights","h","onmouseenter","onmouseleave","max_start","max_end","is_dragging","x_on_start","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","pos","abs","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","extended","trigger","scrollWidth","currentTarget","old_scroll_left","localBars","dx","offsetWidth","get_snap_position","_c","bind_bar_progress","is_resizing","y_on_start","min_dx","max_dx","range_positions","now_x","out","to_process","unit_length","default_snap","rem","final_dx","final_pos","drn","modes","isArray","some","opts","args","apply","get_oldest_starting_date","prev_date","_d","_e","_f","_g","_h","_i","_j","s","VIEW_MODE","WEEK"],"mappings":"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"}